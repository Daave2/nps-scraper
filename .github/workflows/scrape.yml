name: Looker Studio Scraper

on:
  workflow_dispatch: {}
  schedule:
    # 08:05, 11:05, 14:05, 17:05, 20:05 London (cron is UTC)
    - cron: "5 7,10,13,16,19 * * *"

concurrency:
  group: looker-scrape
  cancel-in-progress: false

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install playwright requests schedule
          python -m playwright install --with-deps chromium

      # ========= RESTORE STATE =========
      - name: Restore scraper state (auth_state.json + comments_log.csv)
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            auth_state.json
            comments_log.csv
          key: scraper-state-${{ runner.os }}-v1
          restore-keys: |
            scraper-state-${{ runner.os }}-
            scraper-state-

      # Optional fallback from Base64 secret
      - name: Fallback restore auth_state.json from secret
        if: ${{ !hashFiles('auth_state.json') }}
        env:
          AUTH_STATE_B64: ${{ secrets.AUTH_STATE_B64 }}
        run: |
          if [ -n "$AUTH_STATE_B64" ]; then
            echo "$AUTH_STATE_B64" | base64 -d > auth_state.json
            echo "Restored auth_state.json from AUTH_STATE_B64 secret."
          else
            echo "No AUTH_STATE_B64 secret provided â€” continuing without auth_state.json."
          fi

      # ========= CONFIG =========
      - name: Create config.ini from secrets
        run: |
          {
            echo "[DEFAULT]"
            echo "GOOGLE_EMAIL=${{ secrets.GOOGLE_EMAIL }}"
            echo "GOOGLE_PASSWORD=${{ secrets.GOOGLE_PASSWORD }}"
            echo "MAIN_WEBHOOK=${{ secrets.MAIN_WEBHOOK }}"
            echo "ALERT_WEBHOOK=${{ secrets.ALERT_WEBHOOK }}"
          } > config.ini

      # ========= RUN SCRAPER =========
      - name: Run scraper (headed via Xvfb, phone 2FA supported)
        env:
          CI_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          xvfb-run -a python scrape.py now

      # ========= STATE SUMMARY =========
      - name: State summary (files and sizes)
        if: always()
        run: |
          echo "::group::State files"
          for f in auth_state.json comments_log.csv scrape.log; do
            if [ -f "$f" ]; then
              echo "[OK] $f -> $(wc -c < "$f") bytes"
            else
              echo "[MISS] $f"
            fi
          done
          echo "::endgroup::"
          echo "::group::comments_log.csv (last 20 lines)"
          if [ -f comments_log.csv ]; then
            tail -n 20 comments_log.csv || true
          else
            echo "comments_log.csv not found"
          fi
          echo "::endgroup::"
          echo "::group::screens/ listing"
          if [ -d screens ]; then
            ls -lah screens || true
          else
            echo "no screens/ dir"
          fi
          echo "::endgroup::"

      # ========= SAVE UPDATED STATE =========
      - name: Save updated scraper state to cache
        if: ${{ hashFiles('auth_state.json', 'comments_log.csv') != '' }}
        uses: actions/cache/save@v4
        with:
          path: |
            auth_state.json
            comments_log.csv
          key: scraper-state-${{ runner.os }}-v1

      # ========= UPLOAD ARTIFACTS =========
      - name: Upload current state as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scraper-state
          path: |
            auth_state.json
            comments_log.csv
          if-no-files-found: ignore

      - name: Upload logs & screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-and-screens
          path: |
            scrape.log
            screens/*
          if-no-files-found: ignore
